---
.title = "TIL: Tuning Linux Networking stack",
.date = @date("2025-01-10"),
.author = "Jorge Esteban Quilcate Otoya",
.layout = "note.shtml",
.tags = [
  "til",
  "linux",
  "performance",
],
.draft = true,
--- 

I haven't had a need to tune the Linux kernel apart from few well-known recommendations [[1](https://kafka.apache.org/documentation/#os)];
but recently when troubleshooting some performance issues in Apache Kafka (Under-Replicate Partitions), 
I got to learn from our SRE team at Aiven about the Linux kernel networking stack [[2]](https://www.kernel.org/doc/html/latest/networking/scaling.html).

As the usual Kafka broker-side tuning was not improving the perfomance and the degradation persisted we had to go a level deeper.

It turns out that the networking stack (how network requests get scheduled and processed based on source host/port) get processed could be tuned for affinity.
This means that 

```bash
BUFFER_SIZE=16384
echo $BUFFER_SIZE | sudo tee /proc/sys/net/core/rps_sock_flow_entries;
num_queues=$(ls /sys/class/net/eth0/queues/ | grep rx | wc -l);
flow_cnt=$(($BUFFER_SIZE / num_queues));
for i in $(seq 0 $((num_queues - 1))); do 
  echo $flow_cnt | sudo tee /sys/class/net/eth0/queues/rx-$i/rps_flow_cnt;
done;
```

## References

1. Kafka documentation for OS tuning: <https://kafka.apache.org/documentation/#os>
2. Kernel documentation on scaling networking stack: <https://www.kernel.org/doc/html/latest/networking/scaling.html> 

